services:
  web:
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      DJANGO_SECRET_KEY: mysecretkey
      DEBUG: "True"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    command: >
      bash -c "
      sleep 10 &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "

  database:
    image: postgres
    restart: always
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - "5435:8080"
    depends_on:
      - database
    networks:
      - app-network

volumes:
  data:

networks:
  app-network:
    driver: bridge
